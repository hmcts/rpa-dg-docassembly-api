#!groovy

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'Document Assembly API',
        projectUrlStr: 'https://github.com/hmcts/rpa-dg-docassembly'
    ],
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ])
])

@Library("Infrastructure")

def type = "java"
def product = "dg"
def component = "docassembly"

def secrets = [
        'rpa-${env}': [
                secret('em-s2s-token', 'FUNCTIONAL_TEST_CLIENT_S2S_TOKEN'),
                secret('show-oauth2-token', 'FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

env.IDAM_API_BASE_URI = 'https://idam-api.demo.platform.hmcts.net'
env.S2S_BASE_URI = 'http://rpe-service-auth-provider-demo.service.core-compute-demo.internal'
env.IDAM_WEBSHOW_WHITELIST = 'https://em-show-demo.service.core-compute-demo.internal/oauth2/callback'
env.DM_STORE_APP_URL = 'http://dm-store-demo.service.core-compute-demo.internal'
env.DG_TEMPLATE_MANAGEMENT_API = 'http://dg-tmpl-mgmt-demo.service.core-compute-demo.internal'

def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withPipeline(type , product, component) {
    enableDockerBuild()
    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    //disableLegacyDeployment()
    installCharts()
    enableAksStagingDeployment()
    after('test') {
        sh '''
        curl https://raw.githubusercontent.com/hmcts/reform-api-docs/master/bin/publish-swagger-docs.sh > publish-swagger-docs.sh
        sh ./publish-swagger-docs.sh
         '''
    }
}
