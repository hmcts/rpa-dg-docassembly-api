
plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'org.owasp.dependencycheck' version '5.2.1'
    id 'com.github.ben-manes.versions' version '0.21.0'
    id "se.patrikerdes.use-latest-versions" version "0.2.11"
    id 'org.sonarqube' version '2.7.1'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id "com.github.lkishalmi.gatling" version "3.0.2"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'idea'

group 'uk.gov.hmcts.reform.dg.docassembly'
version '0.0.1'
sourceCompatibility = 1.8
mainClassName = 'uk.gov.hmcts.reform.dg.docassembly.Application'

configurations {
    aatCompile.extendsFrom(testCompile)
    aatRuntime.extendsFrom(testRuntime)
}

repositories {
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
    mavenLocal()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

dependencies {
    compile "com.squareup.okhttp3:okhttp:4.0.1"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org:2.9.9"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.9.9"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.9.1"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner:2.9.9"
    compile "com.jayway.jsonpath:json-path:2.4.0"
    compile "io.springfox:springfox-swagger2:2.9.2"
    compile "io.springfox:springfox-swagger-ui:2.9.2"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.zalando:problem-spring-web:0.24.0-RC.0"
    compile "pl.touk:throwing-function:1.3"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.0'
    compile group: 'com.microsoft.azure', name: 'applicationinsights-core', version: '2.4.0'
    compile group: 'commons-validator', name: 'commons-validator', version: '1.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.3'
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '2.0.1'
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: '5.0.1'
    compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: '5.0.1'
    compile group: 'uk.gov.hmcts.reform', name: 'health-spring-boot-starter', version: '0.0.4'
    compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version:'0.0.4'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "com.github.gmazzo:okhttp-mock:1.3.1"
    testCompile "io.rest-assured:rest-assured:4.0.0"
    testCompile group: 'io.rest-assured', name: 'json-path', version: '4.0.0'
    testCompile group: 'io.rest-assured', name: 'xml-path', version: '4.0.0'
}

bootJar {
    baseName 'rpa-dg-docassembly'
    archiveName = "$baseName"+".jar"
    destinationDir = file("$rootDir/build/libs")
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

def coverageExclusionList = [
    '**uk/gov/hmcts/reform/dg/docassembly/Application*',
    '**uk/gov/hmcts/reform/dg/docassembly/appinsights/*',
    '**uk/gov/hmcts/reform/dg/docassembly/config/*',
    '**uk/gov/hmcts/reform/dg/docassembly/config/logging/*',
    '**uk/gov/hmcts/reform/dg/docassembly/domain/*',
    '**uk/gov/hmcts/reform/dg/docassembly/service/dto/external/annotation/*',
]

jacoco {
    toolVersion = '0.7.9' // jacocoMavenPluginVersion
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = true
        xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: coverageExclusionList)
        })
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        property "sonar.exclusions", coverageExclusionList.join(", ")
    }
}


checkstyle {
    maxWarnings = 0
    toolVersion = '8.8'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
    toolVersion = "6.12.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'false' ? 11 : 0
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

sourceSets {
    aat {
        scala {
            srcDirs = ['src/aat/java']
        }
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir('src/aat/java')
        }
        resources {
            srcDir('src/aat/resources')
        }
        compileClasspath += configurations.gatling
    }
}

configurations {
    gatling
}

gatling {
    logLevel = "INFO"
}

task gatlingRunAAT(type: JavaExec) {
    group = 'gatling'
    description = 'Run gatling tests'
    new File("${buildDir}/reports/tests/performance").mkdirs()
    classpath = sourceSets.aat.runtimeClasspath + configurations.gatling
    main = "io.gatling.app.Gatling"
    args = ['-s', 'uk.gov.hmcts.reform.dg.docassembly.performance.NpaLoad',
            '-rf', "${buildDir}/reports/tests/performance"
    ]
}

task gatlingRunSmoke(type: JavaExec) {
    group = 'gatling'
    description = 'Run gatling tests'
    new File("${buildDir}/reports/tests/performance").mkdirs()
    classpath = sourceSets.aat.runtimeClasspath + configurations.gatling
    main = "io.gatling.app.Gatling"
    args = ['-s', 'uk.gov.hmcts.reform.dg.docassembly.performance.NpaSmoke',
            '-rf', "${buildDir}/reports/tests/performance"
    ]
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/dg/docassembly/functional/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/dg/docassembly/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

compileJava.dependsOn processResources
