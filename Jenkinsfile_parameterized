#!groovy

properties([
        [
                $class: 'GithubProjectProperty',
                displayName: 'Document Assembly API',
                projectUrlStr: 'https://github.com/hmcts/rap-dg-docassembly'
        ],
        pipelineTriggers([
                [$class: 'GitHubPushTrigger']
        ]),
        parameters([
                choice(name: 'ENVIRONMENT', choices: 'saat\nsprod\nsandbox', description: 'Environment where code should be build and deployed')
        ]),
])

@Library("Infrastructure")

def type = "java"
def product = "dg"
def component = "docassembly"

def secrets = [
        'rpa-${env}': [
                secret('em-s2s-token', 'FUNCTIONAL_TEST_CLIENT_S2S_TOKEN'),
                secret('show-oauth2-token', 'FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withParameterizedPipeline(type, product, component, params.ENVIRONMENT, 'sandbox') {
    enableDockerBuild()
    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }
}
